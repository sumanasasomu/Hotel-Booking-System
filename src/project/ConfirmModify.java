/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author RAHUL
 */
public class ConfirmModify extends javax.swing.JFrame {

    GlobalVariables gv = GlobalVariables.getinstance();
    int Rtype[] = new int[4];
    int Cnt_Rtype[] = new int[4];
    int RoomIds[] = new int[10];
    int no_of_diffRooms = 0;
    int hid_modify;
    int t=0;
    
    
    public ConfirmModify() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Jto_M = new com.toedter.calendar.JDateChooser();
        Jfrom_M = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        Lerror = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MODIFICAION");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter your dates");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        Jfrom_M.setDateFormatString("yyyy-MM-dd");

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 0));
        jButton1.setText("CONFIRM MODIFY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Lerror.setForeground(new java.awt.Color(255, 0, 0));
        Lerror.setText("");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("CHECK-IN");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("CHECK-OUT");

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 0));
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Jfrom_M, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(Jto_M, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(Lerror))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton2)
                        .addGap(50, 50, 50)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Jfrom_M, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Jto_M, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Lerror)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        Jto_M.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        gv.setFromD_M(Jfrom_M.getDate());
        gv.setToD_M(Jto_M.getDate());
        String checkin = gv.getFromD_M();
        String checkout = gv.getToD_M();
        System.out.println(checkin);
        System.out.println(checkout);
        ResultSet olddata = null;
        int no_of_rooms=0;
        
        try
            {
            ResultSet rs = null;
            ResultSet rs_hid = null;
            Connection con = ConnectDB.getConnection();
            Statement st = con.createStatement();
            Statement st1 = con.createStatement();
            String strSQL = "select temp.ca,count(temp.ca) from (select transaction_child.`Rid`,hotel_child.capacity as ca from transaction_child,transaction_parent,hotel_child,hotel_parent where transaction_child.`Bid`=transaction_parent.`Bid` and transaction_child.`Bid` = '"+gv.getBidModify()+"' and hotel_child.`Hid` = hotel_parent.`Hid` and transaction_child.`Rid` = hotel_child.`Rid` )temp group by ca order by ca;";
            String strSQL_hid = "select distinct transaction_parent.Hid from transaction_parent,transaction_child where transaction_parent.bid = transaction_child.bid and transaction_parent.bid = '"+gv.getBidModify()+"'"; 
            System.out.println(strSQL);
            System.out.println(strSQL_hid);
            rs = st.executeQuery(strSQL);
            rs_hid = st1.executeQuery(strSQL_hid);
            rs_hid.next();
            hid_modify = rs_hid.getInt(1);
            int i=0;
            while(rs.next())
            {
                Rtype[i]=rs.getInt(1);
                Cnt_Rtype[i]=rs.getInt(2);
                i++;
            }
            no_of_diffRooms = i;
            }
        catch(Exception e)
                {
                    System.out.println(e.getMessage());
                    e.printStackTrace();
                }
            
        int flag=0;
          try
            {
                Connection con = ConnectDB.getConnection();
                Statement st1 = con.createStatement();
                Statement st3 = con.createStatement();
                Statement st4 = con.createStatement();
                for(int j=0;j<no_of_diffRooms;j++)
                {
                    
                    ResultSet rs1 = null;
                    String strSQL3 = "select * from transaction_child where transaction_child.bid = '"+gv.getBidModify()+"'";
                    String strSQL2 = "delete from transaction_child where Bid = '"+gv.getBidModify()+"'";
                    String strSQL1 = "SELECT distinct hotel_child.`Rid`,hotel_child.capacity as ca FROM hotel_parent,hotel_child,transaction_child WHERE HOTEL_PARENT.`Hid`= HOTEL_CHILD.`Hid` and hotel_parent.hid = '"+hid_modify+"' and hotel_child.capacity = '"+Rtype[j]+"' and hotel_child.rid not in (select rid from transaction_child where (transaction_child.`fromD`<='"+checkout+"' and transaction_child.`fromD`>='"+checkin+"') or (transaction_child.`toD`<='"+checkout+"' and transaction_child.`toD`>='"+checkin+"')) order by Rid";
                    
                    System.out.println(strSQL2);
                    System.out.println(strSQL2);
                    System.out.println(strSQL1);
                    
                    olddata = st4.executeQuery(strSQL3);
                    st3.executeUpdate(strSQL2);
                    rs1 = st1.executeQuery(strSQL1);
                    
                    int no_of_rows = 0;
                    while(rs1.next())
                    {
                        no_of_rows++;
                    }
                    while(olddata.next())
                    {
                        no_of_rooms++;
                    }
                    
                    rs1.beforeFirst();
                    rs1.next();
                    System.err.println("no.of rows is :"+no_of_rows);
                    if(no_of_rows>=Cnt_Rtype[j])
                    {
                        for(int k=0;k<Cnt_Rtype[j];k++)
                        {
                            RoomIds[t++] = rs1.getInt(1);
                        }
                    }
                    else
                    {
                        flag=1;
                        break;
                    }
                }
            }
            
        catch(Exception e)
                {
                    System.out.println(e.getMessage());
                    e.printStackTrace();
                }
          if(flag==0)
          {
               try
                {
                Connection con = ConnectDB.getConnection();
                Statement st2 = con.createStatement();
                //Statement st3 = con.createStatement();
                for(int i=0;i<t;i++)
                {
                   String strSQL1 = "insert into transaction_child(Bid,Rid,fromD,toD) values('"+gv.getBidModify()+"','"+RoomIds[i]+"','"+checkin+"','"+checkout+"')"; 
                   //String strSQL2 = "delete from transaction_child where Bid = '"+gv.getBidModify()+"'";
                   
                   //System.out.println(strSQL2);
                   System.out.println(strSQL1);
                   
                   //st3.executeUpdate(strSQL2);
                   st2.executeUpdate(strSQL1);
                   
                }
                }
                catch(Exception e)
                {
                    System.out.println(e.getMessage());
                    e.printStackTrace();
                }
                Welcome wf_fromConfirmModify = new Welcome();
                wf_fromConfirmModify.setVisible(true);
                wf_fromConfirmModify.pack();
                wf_fromConfirmModify.setLocationRelativeTo(null);
                dispose();
                
          }
          else
          {
              try
                {
                Connection con = ConnectDB.getConnection();
                Statement st2 = con.createStatement(); 
                while(olddata.next()) 
                {
                  String strSQL = "insert into transaction_child(Bid,Rid,fromD,toD) values('"+olddata.getInt(1)+"','"+olddata.getInt(2)+"','"+olddata.getString(3)+"','"+olddata.getString(4)+"')"; 
                  st2.executeUpdate(strSQL);
                }              
                }
              catch(Exception e)
                {
                    System.out.println(e.getMessage());
                    e.printStackTrace();
                }
             Lerror.setText("sorry! There is no vacancy");
          }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Modify m_fromConfirmModify = new Modify();
        m_fromConfirmModify.setVisible(true);
        m_fromConfirmModify.pack();
        m_fromConfirmModify.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmModify().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Jfrom_M;
    private com.toedter.calendar.JDateChooser Jto_M;
    private javax.swing.JLabel Lerror;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
